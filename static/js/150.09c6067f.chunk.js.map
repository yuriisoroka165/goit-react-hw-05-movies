{"version":3,"file":"static/js/150.09c6067f.chunk.js","mappings":"gSAIaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mWAgBtBC,EAAuBJ,EAAAA,GAAAA,IAAUK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kKASjCG,EAAmBN,EAAAA,GAAAA,IAAUO,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sNAmB7BK,EAA6BR,EAAAA,GAAAA,IAAUS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wxB,SCpC7C,SAASO,EAAKC,GAAa,IAADC,EAATC,EAAKF,EAALE,MACdC,GAAWC,EAAAA,EAAAA,MAEbC,EAMAH,EANAG,YACAC,EAKAJ,EALAI,eACAC,EAIAL,EAJAK,aACAC,EAGAN,EAHAM,aACAC,EAEAP,EAFAO,SACAC,EACAR,EADAQ,OAEEC,EAA0B,QAAjBV,EAAGE,EAASS,aAAK,IAAAX,OAAA,EAAdA,EAAgBY,KAClC,OACIC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEIC,EAAAA,EAAAA,KAAC7B,EAAI,CAAC8B,GAAa,OAATP,QAAS,IAATA,EAAAA,EAAa,IAAIK,SAAC,aAC5BF,EAAAA,EAAAA,MAACrB,EAAoB,CAAAuB,SAAA,EACjBC,EAAAA,EAAAA,KAAA,OACIE,IAAG,mCAAAC,OAAqCf,GACxCgB,IAAI,GACJC,MAAM,SAEVR,EAAAA,EAAAA,MAACnB,EAAgB,CAAAqB,SAAA,EACbC,EAAAA,EAAAA,KAAA,MAAAD,SAAA,GAAAI,OAEQd,EAAc,MAAAc,OAAKb,EAAagB,OAAO,EAAG,GAAE,QAEpDN,EAAAA,EAAAA,KAAA,KAAAD,SAAA,eAAAI,QAC2B,GAAvBI,OAAOhB,IACTiB,UAAS,QACXR,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIP,KACJQ,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,OAAAD,SACKN,EAAOgB,KAAI,SAAAC,GACR,OAAOV,EAAAA,EAAAA,KAAA,KAAAD,SAAmBW,EAAMC,MAAjBD,EAAME,GACzB,aAIZf,EAAAA,EAAAA,MAACjB,EAA0B,CAAAmB,SAAA,EACvBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BACHF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,UAGIC,EAAAA,EAAAA,KAAC3B,EAAAA,GAAO,CAAC4B,GAAG,OAAON,MAAO,CAAEC,KAAMF,GAAYK,SAAC,YAInDC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAC3B,EAAAA,GAAO,CAAC4B,GAAG,UAAUN,MAAO,CAAEC,KAAMF,GAAYK,SAAC,qBAM9DC,EAAAA,EAAAA,KAACa,EAAAA,SAAQ,CAACC,UAAUd,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uBAAuBA,UAC1CC,EAAAA,EAAAA,KAACe,EAAAA,GAAM,QAIvB,CCrCA,MA3BA,WAEI,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCjC,EAAKmC,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA0BJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAetB,OAbAG,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,eAAA7C,GAAA8C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEWC,EAAAA,EAAAA,GAAU,SAADnC,OAAUa,IAAW,KAAD,EAA/CiB,EAASE,EAAAI,KACfjB,EAASW,GAAWE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEpBT,EAASS,EAAAK,GAAMC,SACfC,EAAAA,GAAAA,MAAY,gBAADvC,OAAAgC,EAAAK,KAA0B,yBAAAL,EAAAQ,OAAA,GAAAX,EAAA,kBAE5C,kBARiB,OAAAjD,EAAA6D,MAAA,KAAAC,UAAA,KASlBjB,GACJ,GAAG,CAACZ,KAGAnB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACKd,IAASe,EAAAA,EAAAA,KAAClB,EAAK,CAACG,MAAOA,IACvBwC,IAASzB,EAAAA,EAAAA,KAAC8C,EAAAA,GAAc,CAACC,UAAW,QAGjD,C,oFChCA,EAFgB,mCCIQ,SAAAC,IAMvB,OANuBA,GAAAnB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAxB,SAAAC,EAAyBiB,GAAU,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAT,UAAA,OAAAf,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA2B,OAAzBa,EAAKI,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAG,GAAIH,EAAGG,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAGG,EAAOtB,EAAAE,KAAA,EACnCqB,EAAAA,EAAAA,IAAU,gCAADvD,OACI8C,EAAU,aAAA9C,OAAYgD,GAAGhD,OAAG+C,GAC5D,CAAES,iBAAiB,IACrB,KAAD,EAHW,OAGXP,EAAAjB,EAAAI,KAHOc,EAAID,EAAJC,KAAIlB,EAAAyB,OAAA,SAILP,GAAI,wBAAAlB,EAAAQ,OAAA,GAAAX,EAAA,KACdgB,EAAAJ,MAAA,KAAAC,UAAA,CAED,MAVgC,SAERgB,GAAA,OAAAb,EAAAJ,MAAC,KAADC,UAAA,C","sources":["components/Movie/Movie.styled.js","components/Movie/Movie.jsx","pages/MovieDetails.jsx","services/api-key.js","services/data-fetch-api.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\n\nexport const Link = styled(NavLink)`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 80px;\n    height: 30px;\n    margin-bottom: 10px;\n    background-color: var(--global-green-color);\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: 500;\n    text-decoration: none;\n    color: var(--global-black-color);\n`;\n\nexport const MovieMainInformation = styled.div`\n    width: 100%;\n    display: flex;\n    gap: 10px;\n    margin-bottom: 10px;\n    color: var(--global-black-color);\n    // outline: 1px solid blue;\n`;\n\nexport const MovieDescription = styled.div`\n    padding: 10px;\n\n    > h2,\n    h3,\n    h4 {\n        margin-bottom: 20px;\n    }\n\n    > p {\n        margin-bottom: 20px;\n    }\n\n    > div {\n        display: flex;\n        gap: 6px;\n    }\n`;\n\nexport const MovieAdditionalInformation = styled.div`\n    width: 100%;\n    padding: 10px;\n    padding-bottom: 15px;\n    color: var(--global-black-color);\n    border-top: 1px solid var(--global-black-color);\n    border-bottom: 1px solid var(--global-black-color);\n    // outline: 1px solid blue;\n\n    > p {\n        margin-bottom: 20px;\n    }\n\n    > ul {\n        display: flex;\n        gap: 6px;\n        margin: 0;\n        padding: 0;\n        list-style: none;\n    }\n\n    > ul a {\n        padding: 5px 10px;\n        font-weight: 500;\n        text-decoration: none;\n        text-transform: uppercase;\n        background-color: var(--global-green-color);\n        color: var(--global-black-color);\n        border-radius: 5px;\n\n        &.active {\n            color: var(--global-white-color);\n        }\n    }\n`;\n","import { Suspense } from \"react\";\nimport { Outlet, NavLink, useLocation } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\n\nimport {\n    Link,\n    MovieMainInformation,\n    MovieDescription,\n    MovieAdditionalInformation,\n} from \"./Movie.styled\";\n\nexport function Movie({ movie }) {\n    const location = useLocation();\n    const {\n        poster_path,\n        original_title,\n        release_date,\n        vote_average,\n        overview,\n        genres,\n    } = movie;\n    const stateFrom = location.state?.from;\n    return (\n        <>\n            {/* повенутись на попередню сторінку або якщо неможливо то на головну */}\n            <Link to={stateFrom ?? \"/\"}>Go back</Link>\n            <MovieMainInformation>\n                <img\n                    src={`https://image.tmdb.org/t/p/w185/${poster_path}`}\n                    alt=\"\"\n                    width=\"185\"\n                />\n                <MovieDescription>\n                    <h2>\n                        {/* рік, зі строки дати релізу */}\n                        {`${original_title} (${release_date.substr(0, 4)})`}\n                    </h2>\n                    <p>{`User Score: ${(\n                        Number(vote_average) * 10\n                    ).toFixed()}%`}</p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h4>Genres</h4>\n                    <div>\n                        {genres.map(genre => {\n                            return <p key={genre.id}>{genre.name}</p>;\n                        })}\n                    </div>\n                </MovieDescription>\n            </MovieMainInformation>\n            <MovieAdditionalInformation>\n                <p>Additional information</p>\n                <ul>\n                    <li>\n                        {/* state={{from: stateFrom}} - з якої сторінки був перехід бо при рендері cast і previews змінюється url, \n                        також для цього можна застосувати хук useRef*/}\n                        <NavLink to=\"cast\" state={{ from: stateFrom }}>\n                            Cast\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink to=\"reviews\" state={{ from: stateFrom }}>\n                            Reviews\n                        </NavLink>\n                    </li>\n                </ul>\n            </MovieAdditionalInformation>\n            <Suspense fallback={<p>Loading subpage...</p>}>\n                <Outlet />\n            </Suspense>\n        </>\n    );\n}\n\nMovie.propTypes = {\n    movie: PropTypes.object.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport fetchData from \"services/data-fetch-api\";\nimport { Movie } from \"components/Movie/Movie\";\n\nfunction MoviesDetails() {\n    // useParams повертає обєкт з цсіма динамічними властиваостями з поточного URL\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const getMovieData = async () => {\n            try {\n                const movieData = await fetchData(`movie/${movieId}`);\n                setMovie(movieData);\n            } catch (error) {\n                setError(error.message);\n                toast.error(`Fetch error: ${error}`);\n            }\n        };\n        getMovieData();\n    }, [movieId]);\n\n    return (\n        <>\n            {movie && <Movie movie={movie} />}\n            {error && <ToastContainer autoClose={3000} />}\n        </>\n    );\n}\n\nexport default MoviesDetails;\n","const API_KEY = \"2146ba70e3259479566e1b682a61e224\";\n\nexport default API_KEY;\n","import axios from \"axios\";\n\nimport API_KEY from \"./api-key\";\n\nasync function fetchData(parameters, query = \"\", key = API_KEY) {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/${parameters}?api_key=${key}${query}`,\n        { withCredentials: false }\n    );\n    return data;\n}\n\nexport default fetchData;\n"],"names":["Link","styled","NavLink","_templateObject","_taggedTemplateLiteral","MovieMainInformation","_templateObject2","MovieDescription","_templateObject3","MovieAdditionalInformation","_templateObject4","Movie","_ref","_location$state","movie","location","useLocation","poster_path","original_title","release_date","vote_average","overview","genres","stateFrom","state","from","_jsxs","_Fragment","children","_jsx","to","src","concat","alt","width","substr","Number","toFixed","map","genre","name","id","Suspense","fallback","Outlet","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","error","setError","useEffect","getMovieData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movieData","wrap","_context","prev","next","fetchData","sent","t0","message","toast","stop","apply","arguments","ToastContainer","autoClose","_fetchData","parameters","query","key","_yield$axios$get","data","_args","length","undefined","API_KEY","axios","withCredentials","abrupt","_x"],"sourceRoot":""}