{"version":3,"file":"static/js/149.d95bc32a.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/api-key.js","services/data-fetch-api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    margin-top: 30px;\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    grid-template-rows: repeat(4, 1fr);\n    grid-column-gap: 15px;\n    grid-row-gap: 15px;\n    color: var(--global-black-color);\n`;\n\nexport const LinkWrapper = styled.div`\n    // outline: 1px solid blue;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n\n    > a {\n        display: flex;\n        flex-direction: column;\n        text-decoration: none;\n        font-weight: 500;\n        color: var(--global-black-color);\n    }\n`;\n\nexport const MovieName = styled.h6`\n    margin-top: 5px;\n`;\n\nexport const MovieRelease = styled.p`\n    font-size: 8px;\n`;\n","import PropTypes from \"prop-types\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {\n    Container,\n    LinkWrapper,\n    MovieName,\n    MovieRelease,\n} from \"./MoviesList.styled\";\n\nexport function MovieList({ movies }) {\n    const location = useLocation();\n    return (\n        <Container>\n            {movies.map(movie => {\n                return movie.poster_path ? (\n                    <LinkWrapper key={movie.id}>\n                        <Link\n                            to={`movies/${movie.id}`}\n                            state={{ from: location }}\n                        >\n                            <img\n                                src={`https://image.tmdb.org/t/p/w154/${movie.poster_path}`}\n                                alt=\"\"\n                            />\n                            <MovieName>{movie.original_title}</MovieName>\n                        </Link>\n                        <MovieRelease>\n                            Release date: {movie.release_date}\n                        </MovieRelease>\n                    </LinkWrapper>\n                ) : null;\n            })}\n        </Container>\n    );\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nexport function SearchForm({ onSubmit }) {\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input\n                    type=\"text\"\n                    name=\"query\"\n                    autoFocus\n                    placeholder=\"Search movie\"\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n        </>\n    );\n}\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n","import fetchData from \"services/data-fetch-api\";\nimport { useState, useEffect } from \"react\";\nimport { MovieList } from \"components/MoviesList/MoviesList\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction Movies() {\n    // const location\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\") ?? \"\";\n\n    useEffect(() => {\n        if (!query) {\n            return;\n        }\n        const getMovies = async () => {\n            try {\n                const { results } = await fetchData(\n                    \"search/movie\",\n                    `&query=${query}`\n                );\n                setMovies(results);\n            } catch (error) {\n                setError(error.message);\n                toast.error(`Fetch error: ${error}`);\n            }\n        };\n\n        getMovies();\n    }, [query]);\n\n    function handleFormSubmit(event) {\n        event.preventDefault();\n        const form = event.currentTarget;\n        setSearchParams({ query: form.elements.query.value });\n        form.reset();\n    }\n\n    return (\n        <>\n            <h1>Welcome Movies Page</h1>\n            <SearchForm onSubmit={handleFormSubmit} />\n            {movies.length === 0 && query !== \"\" && (\n                <p>{`We don't have any movies for query: ${query}!`}</p>\n            )}\n            {movies.length !== 0 && <MovieList movies={movies} />}\n            {error && <ToastContainer autoClose={3000} />}\n        </>\n    );\n}\n\nexport default Movies;\n","const API_KEY = \"2146ba70e3259479566e1b682a61e224\";\n\nexport default API_KEY;\n","import axios from \"axios\";\nimport API_KEY from \"./api-key\";\n\nasync function fetchData(parameters, query=\"\", key = API_KEY) {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/${parameters}?api_key=${key}${query}`,\n        { withCredentials: false }\n    );\n    return data;\n};\n\nexport default fetchData;\n\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","LinkWrapper","_templateObject2","MovieName","_templateObject3","MovieRelease","_templateObject4","MovieList","_ref","movies","location","useLocation","_jsx","children","map","movie","poster_path","_jsxs","Link","to","concat","id","state","from","src","alt","original_title","release_date","SearchForm","onSubmit","_Fragment","type","name","autoFocus","placeholder","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","getMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$fetchData","results","wrap","_context","prev","next","fetchData","sent","t0","message","toast","stop","apply","arguments","event","preventDefault","form","currentTarget","elements","value","reset","length","ToastContainer","autoClose","_fetchData","parameters","key","_yield$axios$get","data","_args","undefined","API_KEY","axios","withCredentials","abrupt","_x"],"sourceRoot":""}