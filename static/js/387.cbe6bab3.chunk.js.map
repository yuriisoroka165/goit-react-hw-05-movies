{"version":3,"file":"static/js/387.cbe6bab3.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api-key.js","services/data-fetch-api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    padding: 10px;\n    padding-top: 20px;\n\n    > h1 {\n        margin-bottom: 10px;\n    }\n`;\n\nexport const CastList = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(9, 1fr);\n    grid-template-rows: repeat(4, 1fr);\n    grid-column-gap: 15px;\n    grid-row-gap: 15px;\n    list-style: none;\n    padding: 0;\n    margin: 0;\n`;\n\nexport const CastItem = styled.li`\n    display: flex;\n    flex-direction: column;\n    // justify-content: space-between;\n\n    > h4 {\n        margin-top: 5px;\n        color: var(--global-black-color);\n    }\n\n    > p {\n        margin-top: 10px;\n        font-size: 12px;\n        font-weight: 500;\n    }\n`;","import { Container, CastList, CastItem } from \"./Cast.styled\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport fetchData from \"services/data-fetch-api\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const getCastData = async () => {\n            try {\n                const { cast } = await fetchData(`/movie/${movieId}/credits`);\n                setCast(cast);\n            } catch (error) {\n                setError(error.message);\n                toast.error(`Fetch error: ${error}`);\n            }\n        };\n        getCastData();\n    }, [movieId]);\n    return (\n        <Container>\n            {error && <ToastContainer autoClose={3000} />}\n            <h1>Cast</h1>\n            <CastList>\n                {cast.map(actor => {\n                    return actor.profile_path ? (\n                        <CastItem key={actor.id}>\n                            <img\n                                src={`https://image.tmdb.org/t/p/w154/${actor.profile_path}`}\n                                alt={`${actor.name}`}\n                            />\n                            <h4>{actor.name}</h4>\n                            <p>Character: {actor.character}</p>\n                        </CastItem>\n                    ) : null;\n                })}\n            </CastList>\n        </Container>\n    );\n}\n\nexport default Cast;\n","const API_KEY = \"2146ba70e3259479566e1b682a61e224\";\n\nexport default API_KEY;\n","import axios from \"axios\";\nimport API_KEY from \"./api-key\";\n\nasync function fetchData(parameters, key = API_KEY) {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/${parameters}?api_key=${key}`,\n        { withCredentials: false }\n    );\n    return data;\n};\n\nexport default fetchData;\n\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","CastList","_templateObject2","CastItem","_templateObject3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","error","setError","useEffect","getCastData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$fetchData","_cast","wrap","_context","prev","next","fetchData","concat","sent","t0","message","toast","stop","apply","arguments","_jsxs","children","_jsx","ToastContainer","autoClose","map","actor","profile_path","src","alt","name","character","id","_fetchData","parameters","key","_yield$axios$get","data","_args","length","undefined","API_KEY","axios","withCredentials","abrupt","_x"],"sourceRoot":""}