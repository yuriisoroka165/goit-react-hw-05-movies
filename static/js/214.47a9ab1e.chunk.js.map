{"version":3,"file":"static/js/214.47a9ab1e.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/api-key.js","services/data-fetch-api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    margin-top: 30px;\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    grid-template-rows: repeat(4, 1fr);\n    grid-column-gap: 15px;\n    grid-row-gap: 15px;\n    color: var(--global-black-color);\n`;\n\nexport const LinkWrapper = styled.div`\n    // outline: 1px solid blue;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n\n    > a {\n        display: flex;\n        flex-direction: column;\n        text-decoration: none;\n        font-weight: 500;\n        color: var(--global-black-color);\n    }\n`;\n\nexport const MovieName = styled.h6`\n    margin-top: 5px;\n`;\n\nexport const MovieRelease = styled.p`\n    font-size: 8px;\n`;\n","import PropTypes from \"prop-types\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {\n    Container,\n    LinkWrapper,\n    MovieName,\n    MovieRelease,\n} from \"./MoviesList.styled\";\n\nexport function MovieList ({ movies }) {\n    const location = useLocation();\n    return (\n        <Container>\n            {movies.map(movie => (\n                <LinkWrapper key={movie.id}>\n                    <Link to={`movies/${movie.id}`} state={{ from: location }}>\n                        <img\n                            src={`https://image.tmdb.org/t/p/w154/${movie.poster_path}`}\n                            alt=\"\"\n                        />\n                        <MovieName>{movie.original_title}</MovieName>\n                    </Link>\n                    <MovieRelease>\n                        Release date: {movie.release_date}\n                    </MovieRelease>\n                </LinkWrapper>\n            ))}\n        </Container>\n    );\n};\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import fetchData from \"services/data-fetch-api\";\nimport { useState, useEffect } from \"react\";\nimport { MovieList } from \"components/MoviesList/MoviesList\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction Home() {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const getTrending = async () => {\n            try {\n                const { results } = await fetchData(\"trending/movie/day\");\n                setMovies(results);\n            } catch (error) {\n                setError(error.message);\n                toast.error(`Fetch error: ${error}`);\n            }\n        };\n\n        getTrending();\n    }, []);\n\n    return (\n        <>\n            <h1>Trending movies today</h1>\n            {movies && <MovieList movies={movies} />}\n            {error && <ToastContainer autoClose={3000} />}\n        </>\n    );\n}\n\nexport default Home;\n","const API_KEY = \"2146ba70e3259479566e1b682a61e224\";\n\nexport default API_KEY;\n","import axios from \"axios\";\nimport API_KEY from \"./api-key\";\n\nasync function fetchData(parameters, key = API_KEY) {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/${parameters}?api_key=${key}`,\n        { withCredentials: false }\n    );\n    return data;\n};\n\nexport default fetchData;\n\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","LinkWrapper","_templateObject2","MovieName","_templateObject3","MovieRelease","_templateObject4","MovieList","_ref","movies","location","useLocation","_jsx","children","map","movie","_jsxs","Link","to","concat","id","state","from","src","poster_path","alt","original_title","release_date","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","error","setError","useEffect","getTrending","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$fetchData","results","wrap","_context","prev","next","fetchData","sent","t0","message","toast","stop","apply","arguments","_Fragment","ToastContainer","autoClose","_fetchData","parameters","key","_yield$axios$get","data","_args","length","undefined","API_KEY","axios","withCredentials","abrupt","_x"],"sourceRoot":""}