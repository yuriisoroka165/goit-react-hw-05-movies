{"version":3,"file":"static/js/415.9e46a84c.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/api-key.js","services/data-fetch-api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    margin-top: 30px;\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    grid-template-rows: repeat(4, 1fr);\n    grid-column-gap: 15px;\n    grid-row-gap: 15px;\n    color: var(--global-black-color);\n`;\n\nexport const LinkWrapper = styled.div`\n    // outline: 1px solid blue;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n\n    > a {\n        display: flex;\n        flex-direction: column;\n        text-decoration: none;\n        font-weight: 500;\n        color: var(--global-black-color);\n    }\n`;\n\nexport const MovieName = styled.h6`\n    margin-top: 5px;\n`;\n\nexport const MovieRelease = styled.p`\n    font-size: 8px;\n`;\n","import { Link, useLocation } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\n\nimport {\n    Container,\n    LinkWrapper,\n    MovieName,\n    MovieRelease,\n} from \"./MoviesList.styled\";\n\nexport function MovieList({ movies }) {\n    const location = useLocation();\n    return (\n        <Container>\n            {movies.map(movie => {\n                // перевірка чи має фільм постер\n                return movie.poster_path ? (\n                    <LinkWrapper key={movie.id}>\n                        <Link\n                            to={\n                                location.pathname === \"/\"\n                                    ? `movies/${movie.id}`\n                                    : `${movie.id}`\n                            }\n                            state={{ from: location }}\n                        >\n                            <img\n                                src={`https://image.tmdb.org/t/p/w154/${movie.poster_path}`}\n                                alt={`${movie.name}`}\n                            />\n                            <MovieName>{movie.original_title}</MovieName>\n                        </Link>\n                        <MovieRelease>\n                            Release date: {movie.release_date}\n                        </MovieRelease>\n                    </LinkWrapper>\n                ) : null;\n            })}\n        </Container>\n    );\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import { useState, useEffect } from \"react\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport fetchData from \"services/data-fetch-api\";\nimport { MovieList } from \"components/MoviesList/MoviesList\";\n\nfunction Home() {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const getTrending = async () => {\n            try {\n                const { results } = await fetchData(\"trending/movie/day\");\n                setMovies(results);\n            } catch (error) {\n                setError(error.message);\n                toast.error(`Fetch error: ${error}`);\n            }\n        };\n\n        getTrending();\n    }, []);\n\n    return (\n        <>\n            <h1>Trending movies today</h1>\n            {movies.length !== 0 && <MovieList movies={movies} />}\n            {error && <ToastContainer autoClose={3000} />}\n        </>\n    );\n}\n\nexport default Home;\n","const API_KEY = \"2146ba70e3259479566e1b682a61e224\";\n\nexport default API_KEY;\n","import axios from \"axios\";\n\nimport API_KEY from \"./api-key\";\n\nasync function fetchData(parameters, query = \"\", key = API_KEY) {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/${parameters}?api_key=${key}${query}`,\n        { withCredentials: false }\n    );\n    return data;\n}\n\nexport default fetchData;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","LinkWrapper","_templateObject2","MovieName","_templateObject3","MovieRelease","_templateObject4","MovieList","_ref","movies","location","useLocation","_jsx","children","map","movie","poster_path","_jsxs","Link","to","pathname","concat","id","state","from","src","alt","name","original_title","release_date","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","error","setError","useEffect","getTrending","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$fetchData","results","wrap","_context","prev","next","fetchData","sent","t0","message","toast","stop","apply","arguments","_Fragment","length","ToastContainer","autoClose","_fetchData","parameters","query","key","_yield$axios$get","data","_args","undefined","API_KEY","axios","withCredentials","abrupt","_x"],"sourceRoot":""}